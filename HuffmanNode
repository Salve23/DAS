import java.util.Comparator;
import java.util.PriorityQueue;
import java.util.Scanner;

class HuffmanNode {
    int data;
    char c;
    HuffmanNode left;
    HuffmanNode right;
}

class MyComparator implements Comparator<HuffmanNode> {
    public int compare(HuffmanNode x, HuffmanNode y) {
        return x.data - y.data;
    }
}

class Huffman {

    public static void printCode(HuffmanNode root, String s) {
        if (root.left == null && root.right == null && Character.isLetter(root.c)) {
            System.out.println(root.c + ":" + s);
            return;
        }
        printCode(root.left, s + "0");
        printCode(root.right, s + "1");
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = 7;
        char[] charArray = {'a', 'b', 'c', 'd', 'e', 'f','j'};
        int[] charFreq = {1, 21, 43, 64, 45, 34, 23};
        scanner.close();

        PriorityQueue<HuffmanNode> q = new PriorityQueue<>(n, new MyComparator());

        for (int i = 0; i < n; i++) {
            HuffmanNode hn = new HuffmanNode();
            hn.c = charArray[i];
            hn.data = charFreq[i];
            hn.left = null;
            hn.right = null;
            q.add(hn);
        }
        //Creat Node
        HuffmanNode root = null;

        while (q.size() > 1) {
            HuffmanNode x = q.poll();//removing the element's
            HuffmanNode y = q.poll();//removing the element's 

            HuffmanNode f = new HuffmanNode();
            f.data = x.data + y.data;
            f.c = '-';
            f.left = x;//add to node first 
            f.right = y;//add the second node

            root = f;
            q.add(f);
        }

        printCode(root, "");
    }
}
